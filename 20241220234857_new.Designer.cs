// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PetLinker.Data;

#nullable disable

namespace PetLinker.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    [Migration("20241220234857_new")]
    partial class @new
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PetLinker.Models.BreedInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Breed")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PetType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("BreedInfos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Breed = "Golden Retriever",
                            Description = "Golden Retrievers are friendly, intelligent, and devoted.",
                            ImageUrl = "golden_retriever.jpg",
                            PetType = "Dog"
                        },
                        new
                        {
                            Id = 2,
                            Breed = "Bulldog",
                            Description = "Bulldogs are muscular, brave, and affectionate.",
                            ImageUrl = "bulldog.jpg",
                            PetType = "Dog"
                        },
                        new
                        {
                            Id = 3,
                            Breed = "Labrador Retriever",
                            Description = "Labrador Retrievers are outgoing, even-tempered, and gentle.",
                            ImageUrl = "labrador_retriever.jpg",
                            PetType = "Dog"
                        },
                        new
                        {
                            Id = 4,
                            Breed = "Persian",
                            Description = "Persians are calm, gentle, and make great lap cats.",
                            ImageUrl = "persian.jpg",
                            PetType = "Cat"
                        },
                        new
                        {
                            Id = 5,
                            Breed = "Maine Coon",
                            Description = "Maine Coons are known for their large size, friendly nature, and intelligence.",
                            ImageUrl = "maine_coon.jpg",
                            PetType = "Cat"
                        },
                        new
                        {
                            Id = 6,
                            Breed = "Siamese",
                            Description = "Siamese cats are social, vocal, and affectionate.",
                            ImageUrl = "siamese.jpg",
                            PetType = "Cat"
                        },
                        new
                        {
                            Id = 7,
                            Breed = "Parrot",
                            Description = "Parrots are intelligent, social, and colorful.",
                            ImageUrl = "parrot.jpg",
                            PetType = "Bird"
                        },
                        new
                        {
                            Id = 8,
                            Breed = "Canary",
                            Description = "Canaries are small, colorful, and great singers.",
                            ImageUrl = "canary.jpg",
                            PetType = "Bird"
                        },
                        new
                        {
                            Id = 9,
                            Breed = "Finch",
                            Description = "Finches are small, active birds with colorful feathers.",
                            ImageUrl = "finch.jpg",
                            PetType = "Bird"
                        });
                });

            modelBuilder.Entity("PetLinker.Models.MarketPlaceEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ContactInfo")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Description")
                        .HasMaxLength(2500)
                        .HasColumnType("nvarchar(2500)");

                    b.Property<string>("Location")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("OpeningHours")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("PaymentMethods")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Products")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("StoreName")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.ToTable("MarketPlaces");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ContactInfo = "111-222-3333",
                            Description = "A pet store offering a variety of pet products and accessories.",
                            Location = "Nasr City",
                            OpeningHours = "9:00 AM - 8:00 PM",
                            PaymentMethods = "Cash, Credit Card, PayPal",
                            Products = "Pet food, Pet toys, Pet accessories",
                            StoreName = "Pet World"
                        },
                        new
                        {
                            Id = 2,
                            ContactInfo = "444-555-6666",
                            Description = "Specialized store for pet grooming supplies and accessories.",
                            Location = "6th of October",
                            OpeningHours = "10:00 AM - 7:00 PM",
                            PaymentMethods = "Cash, Debit Card",
                            Products = "Dog collars, Cat trees, Pet grooming products",
                            StoreName = "Paws & Claws"
                        },
                        new
                        {
                            Id = 3,
                            ContactInfo = "777-888-9999",
                            Description = "A boutique for fashionable pet clothing and accessories.",
                            Location = "Tagmoa",
                            OpeningHours = "11:00 AM - 6:00 PM",
                            PaymentMethods = "Cash, Credit Card",
                            Products = "Pet apparel, Leashes, Pet beds",
                            StoreName = "Furry Friends Boutique"
                        },
                        new
                        {
                            Id = 4,
                            ContactInfo = "555-666-7777",
                            Description = "Store selling fish tanks, aquatic life supplies, and pet birds.",
                            Location = "Nasr City",
                            OpeningHours = "8:00 AM - 8:00 PM",
                            PaymentMethods = "Cash, Credit Card",
                            Products = "Aquariums, Fish food, Birds cages",
                            StoreName = "The Pet Shop"
                        },
                        new
                        {
                            Id = 5,
                            ContactInfo = "999-000-1111",
                            Description = "Offering a wide range of healthy products for pets.",
                            Location = "6th of October",
                            OpeningHours = "9:00 AM - 5:00 PM",
                            PaymentMethods = "Cash, Debit Card, PayPal",
                            Products = "Pet food, Vitamins, Supplements",
                            StoreName = "Healthy Pets"
                        },
                        new
                        {
                            Id = 6,
                            ContactInfo = "333-444-5555",
                            Description = "A one-stop shop for all your pet supply needs.",
                            Location = "Tagmoa",
                            OpeningHours = "10:00 AM - 7:00 PM",
                            PaymentMethods = "Cash, Credit Card",
                            Products = "Pet cages, Pet carriers, Pet cleaning products",
                            StoreName = "Pet Supplies Hub"
                        });
                });

            modelBuilder.Entity("PetLinker.Models.Pet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Breed")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("HealthCondition")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UserProfileUsername")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.HasKey("Id");

                    b.HasIndex("UserProfileUsername");

                    b.ToTable("Pets");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Age = 2,
                            Breed = "British Shorthair",
                            Gender = "Male",
                            HealthCondition = "",
                            Location = "Tagmoa",
                            Status = "Adopted",
                            Type = "Cat"
                        },
                        new
                        {
                            Id = 2,
                            Age = 1,
                            Breed = "Golden Retriever",
                            Gender = "Female",
                            HealthCondition = "",
                            Location = "Nasr City",
                            Status = "Adopted",
                            Type = "Dog"
                        },
                        new
                        {
                            Id = 3,
                            Age = 2,
                            Breed = "Basset Hound",
                            Gender = "Male",
                            HealthCondition = "",
                            Location = "Maadi",
                            Status = "Free",
                            Type = "Dog"
                        },
                        new
                        {
                            Id = 4,
                            Age = 3,
                            Breed = "Maine Coon",
                            Gender = "Female",
                            HealthCondition = "",
                            Location = "Zayed",
                            Status = "Free",
                            Type = "Cat"
                        },
                        new
                        {
                            Id = 5,
                            Age = 4,
                            Breed = "American Shorthair",
                            Gender = "Male",
                            HealthCondition = "",
                            Location = "Tagmoa",
                            Status = "Free",
                            Type = "Cat"
                        },
                        new
                        {
                            Id = 6,
                            Age = 1,
                            Breed = "Parrot",
                            Gender = "Female",
                            HealthCondition = "",
                            Location = "Rehab",
                            Status = "Free",
                            Type = "Bird"
                        });
                });

            modelBuilder.Entity("PetLinker.Models.Reservation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Date")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("Id");

                    b.ToTable("Reservations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Date = "2024-12-21",
                            Name = "Rania Elmorshidy",
                            Phone = "01128394759"
                        },
                        new
                        {
                            Id = 2,
                            Date = "2024-12-22",
                            Name = "Nada Waleed",
                            Phone = "01234567893"
                        });
                });

            modelBuilder.Entity("PetLinker.Models.UserProfile", b =>
                {
                    b.Property<string>("Username")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Feedback")
                        .IsRequired()
                        .HasMaxLength(2500)
                        .HasColumnType("nvarchar(2500)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Username");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Username = "Malak",
                            Email = "Malak@gmail.com",
                            Feedback = "Overall experiance is so good",
                            Password = "12345",
                            Status = "Adopter"
                        },
                        new
                        {
                            Username = "Azza",
                            Email = "Azza@gmail.com",
                            Feedback = "",
                            Password = "123456",
                            Status = "Normal"
                        });
                });

            modelBuilder.Entity("PetLinker.PetActivity", b =>
                {
                    b.Property<int>("ActivityNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ActivityNumber"));

                    b.Property<string>("ActivityName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ActivityType")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ContactInfo")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("ActivityNumber");

                    b.ToTable("PetActivities");

                    b.HasData(
                        new
                        {
                            ActivityNumber = 1,
                            ActivityName = "Dog Park Meetup",
                            ActivityType = "Outdoor",
                            ContactInfo = "123-456-7890",
                            Description = "A fun meetup for dogs and their owners in the park.",
                            Location = "Tagmoa"
                        },
                        new
                        {
                            ActivityNumber = 2,
                            ActivityName = "Pet Grooming Workshop",
                            ActivityType = "Workshop",
                            ContactInfo = "987-654-3210",
                            Description = "Learn the basics of pet grooming from professionals.",
                            Location = "6th of October"
                        },
                        new
                        {
                            ActivityNumber = 3,
                            ActivityName = "Cat Show",
                            ActivityType = "Exhibition",
                            ContactInfo = "555-123-4567",
                            Description = "An exhibition of different cat breeds and their owners.",
                            Location = "Nasr City"
                        },
                        new
                        {
                            ActivityNumber = 4,
                            ActivityName = "Pet Playdate",
                            ActivityType = "Outdoor",
                            ContactInfo = "222-333-4444",
                            Description = "A fun playdate for pets of all kinds to interact and make new friends.",
                            Location = "Nasr City"
                        },
                        new
                        {
                            ActivityNumber = 5,
                            ActivityName = "Pet Wellness Check-up",
                            ActivityType = "Workshop",
                            ContactInfo = "333-444-5555",
                            Description = "A workshop offering health check-ups and wellness tips for pets.",
                            Location = "6th of October"
                        },
                        new
                        {
                            ActivityNumber = 6,
                            ActivityName = "Dog Agility Training",
                            ActivityType = "Workshop",
                            ContactInfo = "444-555-6666",
                            Description = "A workshop focusing on agility training for dogs of all sizes.",
                            Location = "Tagmoa"
                        },
                        new
                        {
                            ActivityNumber = 7,
                            ActivityName = "Pet Fashion Show",
                            ActivityType = "Exhibition",
                            ContactInfo = "555-666-7777",
                            Description = "An exciting fashion show featuring pets in stylish outfits.",
                            Location = "Nasr City"
                        },
                        new
                        {
                            ActivityNumber = 8,
                            ActivityName = "Exotic Pet Care Talk",
                            ActivityType = "Seminar",
                            ContactInfo = "666-777-8888",
                            Description = "A seminar on how to care for exotic pets like reptiles and birds.",
                            Location = "6th of October"
                        },
                        new
                        {
                            ActivityNumber = 9,
                            ActivityName = "Pet Nutrition Workshop",
                            ActivityType = "Workshop",
                            ContactInfo = "777-888-9999",
                            Description = "A workshop focusing on the best nutrition practices for your pets.",
                            Location = "Nasr City"
                        },
                        new
                        {
                            ActivityNumber = 10,
                            ActivityName = "Dog Walking Group",
                            ActivityType = "Outdoor",
                            ContactInfo = "888-999-0000",
                            Description = "Join our group walk through the park for dogs and their owners.",
                            Location = "6th of October"
                        },
                        new
                        {
                            ActivityNumber = 11,
                            ActivityName = "Pet First Aid Training",
                            ActivityType = "Workshop",
                            ContactInfo = "999-000-1111",
                            Description = "Learn essential first aid skills for your pets in an emergency.",
                            Location = "Tagmoa"
                        },
                        new
                        {
                            ActivityNumber = 12,
                            ActivityName = "Feline Behavior Seminar",
                            ActivityType = "Seminar",
                            ContactInfo = "000-111-2222",
                            Description = "A seminar on understanding and managing common feline behaviors.",
                            Location = "Nasr City"
                        },
                        new
                        {
                            ActivityNumber = 13,
                            ActivityName = "Pet-Friendly Home Design",
                            ActivityType = "Workshop",
                            ContactInfo = "111-222-3333",
                            Description = "Learn how to design a pet-friendly home for your furry friends.",
                            Location = "6th of October"
                        },
                        new
                        {
                            ActivityNumber = 14,
                            ActivityName = "Senior Pet Care Talk",
                            ActivityType = "Seminar",
                            ContactInfo = "222-333-4444",
                            Description = "A talk about the special care needed for older pets.",
                            Location = "Tagmoa"
                        },
                        new
                        {
                            ActivityNumber = 15,
                            ActivityName = "Pet Massage Class",
                            ActivityType = "Workshop",
                            ContactInfo = "333-444-5555",
                            Description = "Learn the basics of massaging your pet for relaxation and health.",
                            Location = "Nasr City"
                        });
                });

            modelBuilder.Entity("PetLinker.Models.Pet", b =>
                {
                    b.HasOne("PetLinker.Models.UserProfile", "UserProfile")
                        .WithMany()
                        .HasForeignKey("UserProfileUsername");

                    b.Navigation("UserProfile");
                });
#pragma warning restore 612, 618
        }
    }
}
